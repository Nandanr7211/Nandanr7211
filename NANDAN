>git branch
 list your branches. a * will appear next to the currently active branch
>git branch [branch-name]
 create a new branch at the current commit
>git checkout
 switch to another branch and check it out into your working directory
>git merge [branch]
 merge the specified branch’s history into the current one
>git log
 show all commits in the current branch’s history
>git remote add [alias] [url]
 add a git URL as an alias
>git fetch [alias]
 fetch down all the branches from that Git remote
>git merge [alias]/[branch]
 merge a remote branch into your current branch to bring it up to date
>git push [alias] [branch]
 Transmit local branch commits to the remote repository branch
>git pull
 fetch and merge any commits from the tracking remote branch
>git rebase [branch]
 apply any commits of current branch ahead of specified one
>git reset --hard [commit]
clear staging area, rewrite working tree from specified commit
>git stash
 Save modified and staged changes
>git stash list
 list stack-order of stashed file changes
>git stash pop
 write working from top of stash stack
>git stash drop
 discard the changes from top of stash stack
